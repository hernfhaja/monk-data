import { LiffCore } from '../liff';
import { LiffModule } from '../core/types';
import { ModuleDriver } from '../core/driver';
import { AnalyticsOption } from '../analytics/types';
export interface Config {
    liffId: string;
    analytics?: AnalyticsOption;
}
declare type Init = (config: Config, successCallback?: () => void, errorCallback?: (error: Error) => void) => Promise<void>;
export declare type ExtendLiffCore = {
    init: Init;
};
export declare class InitModule implements LiffModule<Init> {
    private liffCore;
    private moduleDriver;
    constructor(liffCore: LiffCore, moduleDriver: ModuleDriver);
    get name(): string;
    install(): Init;
    /**
     * Initializes a LIFF app.
     * You can only call other LIFF SDK methods after calling liff.init().
     * The LIFF SDK gets access tokens and ID tokens from the LINE platform
     * when you initialize the LIFF app.
     * @export
     * @param { liffId: string } config
     * @param {Function} [successCallback]
     * @param {Function} [errorCallback]
     * @returns {Promise<any>}
     */
    private init;
}
export {};
