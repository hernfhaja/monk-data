import { ModuleContext } from '../core/context';
import { LiffModule } from '../core/types';
export declare class HandleLiffState implements LiffModule<void> {
    get name(): string;
    /**
     * get and validate Context
     * @returns {Context}
     */
    private getAndValidateContext;
    /**
     * Decode liff.state
     * If valid, return decoded state (with any double slashes removed)
     * Else LiffError is thrown
     * @param {string} state - liff.state's value
     * @throws {LiffError}
     * @returns {string} - Decoded liff.state with any double slashes removed
     */
    private decodeState;
    private handleLiffState;
    install: ({ addHooks }: ModuleContext) => void;
}
export declare const handleLiffStateModule: HandleLiffState;
