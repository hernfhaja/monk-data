import getOS from './common/getOS';
import getVersion from './common/getVersion';
import getLanguage from './common/getLanguage';
import isInClient from './common/isInClient';
import isLoggedIn from './auth/isLoggedIn';
import logout from './auth/logout';
import { getAccessToken, getContext, getIDToken, getDecodedIDToken } from './store';
import { dispatch, call, postMessage, addListener, removeListener } from './client/bridge';
import openWindow from './client/openWindow';
import closeWindow from './client/closeWindow';
import getAId from './client/getAId';
import getProfilePlus from './client/getProfilePlus';
import getIsVideoAutoPlay from './client/getIsVideoAutoPlay';
import getLineVersion from './client/getLineVersion';
import getProfile from './api/getProfile';
import sendMessages from './api/sendMessages';
import shareTargetPicker from './api/shareTargetPicker';
import getFriendship from './api/getFriendship';
import { LiffModules } from './core';
declare const liffCore: {
    getOS: typeof getOS;
    getVersion: typeof getVersion;
    getLanguage: typeof getLanguage;
    isInClient: typeof isInClient;
    isLoggedIn: typeof isLoggedIn;
    logout: typeof logout;
    getAccessToken: typeof getAccessToken;
    getIDToken: typeof getIDToken;
    getDecodedIDToken: typeof getDecodedIDToken;
    getContext: typeof getContext;
    permission: {
        query: typeof import("./auth/permission/query").default;
        requestAll: typeof import("./auth/permission/requestAll").default;
    };
    openWindow: typeof openWindow;
    closeWindow: typeof closeWindow;
    getFriendship: typeof getFriendship;
    getAId: typeof getAId;
    getProfilePlus: typeof getProfilePlus;
    getIsVideoAutoPlay: typeof getIsVideoAutoPlay;
    getLineVersion: typeof getLineVersion;
    isApiAvailable: (apiName: string) => boolean;
    getProfile: typeof getProfile;
    sendMessages: typeof sendMessages;
    shareTargetPicker: typeof shareTargetPicker;
    subWindow: {
        on: typeof import("./api/subWindow/shared/events").on;
        off: typeof import("./api/subWindow/shared/events").off;
        open: typeof import("./api/subWindow/open").default;
        cancel: typeof import("./api/subWindow/cancel").default;
        submit: typeof import("./api/subWindow/submit").default;
        close: typeof import("./api/subWindow/close").default;
        getAppData: typeof import("./api/subWindow/getAppData").default;
    };
    ready: Promise<void>;
    /**
     * The property that holds the LIFF app ID (String type) passed to liff.init().
     * The value of liff.id is null until you run liff.init().
     */
    readonly id: string | null;
    _dispatchEvent: typeof dispatch;
    _call: typeof call;
    _addListener: typeof addListener;
    _removeListener: typeof removeListener;
    _postMessage: typeof postMessage;
};
export declare type LiffCore = typeof liffCore;
declare type Liff = LiffCore & LiffModules;
declare const liff: Liff;
export default liff;
