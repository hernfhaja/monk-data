import { LiffModule, Hooks, SyncHooks } from './types';
export interface ModuleDriver {
    addHooks(hooks: Hooks): void;
    addModule(module: LiffModule): void;
    hasModule(module: LiffModule): boolean;
    runHook<K extends keyof Hooks>(hookName: K, ...args: Parameters<Exclude<Hooks[K], undefined>>): Promise<void>;
    runSyncHook<K extends keyof SyncHooks>(hookName: K, ...args: Parameters<Exclude<SyncHooks[K], undefined>>): void;
}
export declare class ModuleDriverImpl implements ModuleDriver {
    private modules;
    private hooksSet;
    addHooks(hooks: Hooks): void;
    addModule(module: LiffModule): void;
    hasModule(module: LiffModule): boolean;
    runHook<K extends keyof Hooks>(hookName: K, ...args: Parameters<Exclude<Hooks[K], undefined>>): Promise<void>;
    runSyncHook<K extends keyof SyncHooks>(hookName: K, ...args: Parameters<Exclude<SyncHooks[K], undefined>>): void;
}
